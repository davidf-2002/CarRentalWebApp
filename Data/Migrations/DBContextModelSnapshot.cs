// <auto-generated />
using System;
using CarRentalWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRentalWebApp.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("CarRentalWebApp.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CollectionVehicleBranchID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DropoffBranchId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookingId");

                    b.HasIndex("CollectionVehicleBranchID");

                    b.HasIndex("DropoffBranchId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            CollectionVehicleBranchID = 1,
                            CustomerName = "John Smith",
                            DropoffBranchId = 2,
                            StartTime = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = 2,
                            CollectionVehicleBranchID = 2,
                            CustomerName = "Matthew Johnson",
                            DropoffBranchId = 3,
                            StartTime = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingId = 3,
                            CollectionVehicleBranchID = 3,
                            CustomerName = "Harry Brown",
                            DropoffBranchId = 1,
                            StartTime = new DateTime(2025, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CarRentalWebApp.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VehicleBranchId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BranchId");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            City = "Austin",
                            Name = "Austin Branch",
                            VehicleBranchId = 0
                        },
                        new
                        {
                            BranchId = 2,
                            City = "Dallas",
                            Name = "Dallas Branch",
                            VehicleBranchId = 0
                        },
                        new
                        {
                            BranchId = 3,
                            City = "Houston",
                            Name = "Houston Branch",
                            VehicleBranchId = 0
                        });
                });

            modelBuilder.Entity("CarRentalWebApp.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VehicleBranchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            Make = "BMW",
                            Model = "320d",
                            Type = "Sedan",
                            VehicleBranchId = 0,
                            Year = 2017
                        },
                        new
                        {
                            VehicleId = 2,
                            Make = "Audi",
                            Model = "A4",
                            Type = "Sedan",
                            VehicleBranchId = 0,
                            Year = 2018
                        },
                        new
                        {
                            VehicleId = 3,
                            Make = "Tesla",
                            Model = "Model S",
                            Type = "Sedan",
                            VehicleBranchId = 0,
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = 4,
                            Make = "Toyota",
                            Model = "Prius",
                            Type = "Hatchback",
                            VehicleBranchId = 0,
                            Year = 2019
                        });
                });

            modelBuilder.Entity("CarRentalWebApp.Models.VehicleBranch", b =>
                {
                    b.Property<int>("VehicleBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VehicleBranchId");

                    b.HasIndex("BranchId");

                    b.ToTable("VehicleBranches");

                    b.HasData(
                        new
                        {
                            VehicleBranchId = 1,
                            BranchId = 1,
                            IsAvailable = false,
                            Rate = 0,
                            VehicleId = 1
                        },
                        new
                        {
                            VehicleBranchId = 2,
                            BranchId = 2,
                            IsAvailable = false,
                            Rate = 0,
                            VehicleId = 2
                        },
                        new
                        {
                            VehicleBranchId = 3,
                            BranchId = 3,
                            IsAvailable = false,
                            Rate = 0,
                            VehicleId = 3
                        },
                        new
                        {
                            VehicleBranchId = 4,
                            BranchId = 1,
                            IsAvailable = false,
                            Rate = 0,
                            VehicleId = 4
                        });
                });

            modelBuilder.Entity("CarRentalWebApp.Models.Booking", b =>
                {
                    b.HasOne("CarRentalWebApp.Models.VehicleBranch", "CollectionVehicleBranch")
                        .WithMany("Bookings")
                        .HasForeignKey("CollectionVehicleBranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRentalWebApp.Models.Branch", "DropoffBranch")
                        .WithMany("Bookings")
                        .HasForeignKey("DropoffBranchId");

                    b.HasOne("CarRentalWebApp.Models.Vehicle", null)
                        .WithMany("Bookings")
                        .HasForeignKey("VehicleId");

                    b.Navigation("CollectionVehicleBranch");

                    b.Navigation("DropoffBranch");
                });

            modelBuilder.Entity("CarRentalWebApp.Models.VehicleBranch", b =>
                {
                    b.HasOne("CarRentalWebApp.Models.Branch", "branch")
                        .WithMany("VehicleBranches")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRentalWebApp.Models.Vehicle", "vehicle")
                        .WithMany("VehicleBranches")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");

                    b.Navigation("vehicle");
                });

            modelBuilder.Entity("CarRentalWebApp.Models.Branch", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("VehicleBranches");
                });

            modelBuilder.Entity("CarRentalWebApp.Models.Vehicle", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("VehicleBranches");
                });

            modelBuilder.Entity("CarRentalWebApp.Models.VehicleBranch", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
